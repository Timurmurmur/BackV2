export const data = [
    {
        "termin": ["Алгоритм"],
        "definition": "порядок действий, которые необходимо выполнить для решения определенной задачи. В программировании алгоритмы описывают средствами псевдокода, блок-схем и UML диаграмм."
    },
    {
        "termin": ["Ассемблер", "Assembler"],
        "definition": "язык программирования низкого уровня, инструкции которого соответствуют инструкциям машинного кода. Также, ассемблером называют программу – транслятор с языка программирования низкого уровня в машинный код"
    },
    {
        "termin": ["Блок-схема"],
        "definition": "графическая нотация для описания алгоритмов. Используется программистами в процессе разработки и анализа логики работы программных компонентов."
    },
    {
        "termin": ["Веб-дизайн"],
        "definition": "проектирование и разработка внешнего вида интернет сайтов и пользовательского интерфейса веб-приложений, в том числе художественное оформление в соответствии с определенной стилистикой (корпоративным стилем компании-заказчика, стилем рекламной кампании и т.д.). Веб-дизайн является частью веб-программирования."
    },
    {
        "termin": ["Веб-программирование"],
        "definition": "направление в программировании, ориентированное на разработку приложений для сети интернет (вебприложений). Пользователь взаимодействует с веб-приложением через интернет браузер. Само приложение загружается с удаленного вебсервера, а общение клиента и сервера осуществляется через HTTP протокол."
    },
    {
        "termin": ["Веб-сервис", "веб-служба", "Web service"],
        "definition": "вид программного обеспечения, предоставляющего свою функциональность клиентам на уровне программных интерфейсов, построенных на базе HTTP протокола. Вебсервис, как и любой другой ресурс всемирной паутины идентифицируется веб-адресом (URI, Uniform Resource Identifier, унифицированный идентификатор ресурсов). Веб-сервис - это частный случай веб-приложения, отличающегося тем, что не имеет пользовательского интерфейса. Клиентом веб-сервиса обычно является основное веб-приложение или другой веб-сервис, поскольку сам по себе веб-сервис - это компонент сервис-ориентированной архитектуры распределенного приложения."
    },
    {
        "termin": ["Веб-сайт", "интернет-сайт","сайт", "Web site"],
        "definition": "основной вид ресурсов всемирной паутины, представляющей собой совокупность веб-страниц, созданных на основе языка разметки HTML и объединенных общим доменным именем. Сайт размещается на веб-сервере, который является узлом глобальной компьютерной сети интернет. Доступ к сайту осуществляется средствами интернет браузера через HTTP протокол. Веб-сайт является частным случаем веб-приложения."
    },
    {
        "termin": ["Геоинформационная система", "ГИС"],
        "definition": " информационная система, в задачи которой также входит хранение, графическое отображение и управление доступом к пространственным (географическим) данным. Графический пользовательский интерфейс - см. GUI. Инспекция кода (Code review) – систематический и периодический анализ программного кода, направленный на поиск необнаруженных наранних стадиях разработки программного продукта ошибок, а также, на выявление некачественных архитектурных решений и критических мест в программе."
    },
    {
        "termin": ["Информационная система"],
        "definition": "совокупность данных и обслуживающих эти данные технических, программных и организационных ресурсов, создаваемая с целью информационной поддержки пользователей. К Кастомизация в контексте разработки программных продуктов может  означать процесс настройки функциональности программного продукта под требования конечного потребителя. В процессе кастомизации программных продуктов, создающихся на базе некоторого каркаса, зачастую пишутся процедуры на встроенных языках бизнес - сценариев или разрабатываются внешние программные модули, встраивающиеся в общий каркас по определенным правилам спецификациям PlugInкомпонентов. Таким образом, кастомизация приводит к расширению базовой функциональности стандартных программных решений усилиями организаций, занимающихся их внедрением, а разработчики основного программного продукта лишь предоставляют набор инструментов для этого."
    },
    {
        "termin": ["Кристофер Дейт"],
        "definition": "теоретик в области реляционных баз данных, по научным работам которого преподаются основы баз данных во многих учебных заведениях мира."
    },
    {
        "termin": ["Облачные вычисления", "Cloud computing"],
        "definition": "модель организации вычислений, при которой вычислительные процессы, запрашиваемые клиентом, происходят на удаленных, намного более мощных по сравнению с клиентскими вычислительных ресурсах. Взаимодействие сервера с клиентом осуществляется посредством сетевого доступа, но сам процесс вычислений для пользователя является неразрывным – как будто все происходит на стороне клиента."
    },
    {
        "termin": ["Объектно-ориентированная база данных"],
        "definition": "база данных, основанная на объектно-ориентированной модели данных. Концепции объектноориентированного программирования и объектно-ориентированного проектирования баз данных основываются на общих подходах к моделированию предметной области. Главными элементами объектноориентированной модели являются классы, объекты, интерфейсы, атрибуты (свойства), методы и т.п."
    },
    {
        "termin": ["Объектно-ориентированное программирование", "ООП"],
        "definition": "удачная и гениальная, на мой взгляд, парадигма программирования. Суть объектно-ориентированного программирования в представлении обрабатываемой информации в виде объектов – экземпляров классов. Класс – это новый (по отношению к процедурному программированию) тип данных, который объединяет в себе и структуры данных и параметризованные процедуры."
    },
    {
        "termin": ["Паскаль", "Pascal"],
        "definition": "один из наиболее известных языков программирования высокого уровня, который широко используется в целях обучения программированию. Объектный Паскаль (Object Pascal) является объектно-ориентированным расширением Паскаля, на основе которого создан язык программирования Delphi."
    },
    {
        "termin": ["Прикладное программирование"],
        "definition": "процесс разработки программного  обеспечения, предназначенного для решения прикладных задач в определенной сфере деятельности. Такое программное обеспечение называют прикладным, и оно характеризуется тем, что не использует вычислительные ресурсы аппаратного обеспечения напрямую, а делает это посредством операционной системы."
    },
    {
        "termin": ["Регулярные выражения"],
        "definition": "язык шаблонов или язык масок для поиска в тексте фрагментов, удовлетворяющих определенному набору критериев, разбиения найденных фрагментов на группы с целью дальнейшего их анализа и обработки."
    },
    {
        "termin": ["Реляционная база данных"],
        "definition": "база данных, основанная на реляционной модели данных."
    },
    {
        "termin": ["Рефакторинг кода","Рефакторинг", "Refactoring"],
        "definition": "процесс внесения изменений в программный код в соответствии с некоторым набором правил – приемов рефакторинга, которые не меняют смысл программы, но делают ее код более стройным и легким для интерпретации человеком. Также, рефакторинг способствует облегчению поиска ошибок и “узких мест” в программе."
    },
    {
        "termin": ["Сервис - Ориентированная Архитектура","СОА"],
        "definition": "архитектура сложных программных комплексов, состоящих из отдельно функционирующих программных компонентов – модулей системы, взаимодействующих между собой по сетевым протоколам. Подход СОА основан на классификации и унификации типовых модулей системы и предоставляемых ими интерфейсов, а также, на возможности замены одних модулей их аналогами без ущерба функционированию всей системы.Программные модули характеризуются возможностью многократного использования, автономностью, слабой связностью и чаще всего реализуются, как отдельные веб-сервисы."
    },
    {
        "termin": ["Система Управления Базами Данных", "СУБД"],
        "definition": "программное обеспечение (информационная система), осуществляющее весь спектр операций по управлению базами данных, к которым относятся сама организация хранения данных, обработка инструкций SQL, организация резервного копирования, восстановление резервных копий и т.п."
    },
    {
        "termin": ["Система Управления Содержимым", "CMS", "Content Management System"],
        "definition": "программное обеспечение (информационная система), предоставляющее возможности управления содержимым (контентом) целевой информационной системы или сайта и являющееся фреймворком по отношению к нему. Одной из функций  управления содержимым является предоставление на базе ролей или профилей пользователей доступа к этому самому содержимому."
    },
    {
        "termin": ["Управляемый код","Managed code"],
        "definition": "программный код, исполняемый виртуальной машиной, например, CLR."
    },
    {
        "termin": ["Фреймворк","Framework"],
        "definition": "вид программного обеспечения, являющегося основой (каркасом) различных прикладных программных продуктов. Фреймворк упрощает процесс функционального объединения программных компонентов различного назначения, их взаимодействия и настройки, что позволяет быстро и качественно собрать целевой программный продукт, удовлетворяющий требованиям конкретного потребителя."
    },
    {
        "termin": ["ActiveX Data Objects", "ADO"],
        "definition": "очередное развитие сервисов унифицированного доступа к базам данных от Microsoft на базе технологии ActiveX, которая, в свою очередь, расширяет возможности COM компонентов."
    },
    {
        "termin": ["ActiveX Data Objects.NET","ADO.NET"],
        "definition": "последнее поколение программной технологии унифицированного доступа к базам данных от компании Microsoft, которое уже основано на платформе .NET Framework. Нужно отметить, что технология .NET Framework лишь воплощает развитие идей COM и ActiveX, но не следующий уровень их реализации, поскольку является абсолютно новой программной платформой."
    },
    {
        "termin": ["Application programming interface", "Api"],
        "definition": "интерфейс программирования приложения – функциональность приложения, доступная на программном уровне внешним программным компонентам. API, чаще всего, представляет собой набор программных компонентов, интерфейсов, глобальных функций и т.п. API приложения используется для интеграции с другими приложениями или для расширения и настройки собственной функциональности."
    },
    {
        "termin": ["Base Class Library", "BCL"],
        "definition": "Общая для всех языков программирования платформы Microsoft .NET Framework библиотека классов, в состав которой входят компоненты работы с различными структурами данных, файловыми структурами, базами данных, ресурсами в интернете и т.д."
    },
    {
        "termin": ["Common Intermediate Language", "CIL"],
        "definition": "промежуточный язык программирования низкого уровня, обрабатываемый CLR. По мере обработки CIL кода, виртуальная машина CLR переводит его в  машинный - платформо-зависимый код. CIL код является результатом предварительной компиляции программ, написанных на языках программирования высокого уровня платформы Microsoft .NET Framework, таких как C# и VB.NET."
    },
    {
        "termin": ["Common Language Runtime", "CLR"],
        "definition": "исполняющая среда программной платформы Microsoft .NET Framework, интерпретирующая и контролирующая выполнение программного кода, представленного промежуточным CIL кодом."
    },
    {
        "termin": ["Common Language Specification", "CLS"],
        "definition": " информационная система, в задачи которой также входит хранение, графическое отображение и управление доступом к пространственным (географическим) данным. Графический пользовательский интерфейс - см. GUI. Инспекция кода (Code review) – систематический и периодический анализ программного кода, направленный на поиск необнаруженных наранних стадиях разработки программного продукта ошибок, а также, на выявление некачественных архитектурных решений и критических мест в программе."
    },
    {
        "termin": ["Component Object Model", "COM"],
        "definition": "технология разработки программных компонентов, предназначенных для повторного использования в различных приложениях. Унификация доступа к программным сервисам реализована на основе интерфейсов. Технологией COM компания Microsoft реализует идеи объектно-ориентированного проектирования программных компонентов, возможность использования которых не зависит от выбранного языка программирования и программной платформы."
    },
    {
        "termin": ["C#","C Sharp", "Си Шарп"],
        "definition": "объектно-ориентированный язык программирования платформы Microsoft .NET Framework. По синтаксису очень схож с языками программирования C++ и Java. C++ - объектно-ориентированный язык программирования, разработанный Бьерном Страуструпом."
    },
    {
        "termin": ["Delphi"],
        "definition": "объектно-ориентированный язык программирования, созданный на основе языка программирования Pascal и среда разработки программных продуктов компании Borland."
    },
    {
        "termin": ["Document Object Model", "DOM"],
        "definition": "программный интерфейс доступа к иерархическим структурам в оперативной памяти, соответствующим элементам документов, созданных на базе языков разметки, например, HTML, XML, XHTML и т.п. Обработка документов на основе DOM характеризуется полной загрузкой всего содержимого документа в оперативную память и противопоставляется обработке на основе SAX технологий. Тем не менее, DOM зачастую обеспечивает не только доступ, но и возможности программного редактирования документа."
    },
    {
        "termin": ["Document Type Definition", "DTD"],
        "definition": "специальный язык, который, также как и XML Schema предназначен для описания синтаксических правил XML расширения. Язык DTD, в отличие от XML Schema, сам не является XML расширением, и в настоящее время считается устаревшим стандартом."
    },
    {
        "termin": ["ER диаграммы"],
        "definition": "графическая нотация визуализации данных ER модели. ER модель (модель Сущность-Связь, Entity Relationship Model) – модель данных предметной области, используемая для проектирования реляционных баз данных в терминах сущностей и связей между ними. Сущности характеризуются именем и набором атрибутов, а связи - типом (один – к – одному, один – ко – многим, многие – ко – многим) и характеристикой {обязательная | необязательная}."
    },
    {
        "termin": ["Graphical User Interface", "GUI"],
        "definition": "графический пользовательский интерфейс, предоставляемый современными операционными системами, такими как Windows (Microsoft), Mac OS (Apple) и т.п. GUI представлен графическими окнами, кнопками, списками и прочими элементами управления, манипуляция которыми осуществляется посредством мыши и (или) клавиатуры."
    },
    {
        "termin": ["HyperText Markup Language", "HTML"],
        "definition": "язык разметки веб-страниц, предназначенный для форматирования их содержимого (контента), отображаемого интернет - браузерами."
    },
    {
        "termin": ["HTTP", "HyperText Transfer Prоtocоl"],
        "definition": "сетевой прокол прикладного уровня на базе TCP/IP, предназначенный для передачи гипертекста в условиях клиент-серверного окружения. В основном используется для обмена данными между пользователями и ресурсами в сети интернет – является средством общения распределенных компонентов всемирной  паутины."
    },
    {
        "termin": ["Java"],
        "definition": "объектно-ориентированный язык программирования, разработанных компанией Sun Microsystems."
    },
    {
        "termin": ["JavaScript"],
        "definition": "встроенный в интернет браузер процедурный язык программирования. JavaScript не является чьей-либо собственностью. Назначение JavaScript – манипуляция элементами HTML разметки посредством программных интерфейсов объектной модели загруженной интернет страницы - DOM."
    },
    {
        "termin": ["jQuery"],
        "definition": "библиотека, написанная на JavaScript и созданная с целью упрощения взаимодействия с элементами HTML разметки при создании динамических интернет страниц. jQuery предоставляет программный интерфейс запросов к данным объектной модели загруженной страницы с возможностью выполнения ряда операций над результатами этих запросов."
    },
    {
        "termin": ["Just-in-time compiler", "JIT compiler"],
        "definition": "компилятор промежуточного кода, такого как байт-код (промежуточный язык программирования, обрабатываемый виртуальной машиной Java - JVM) или CIL код в машинный код. JIT компиляция происходит во время исполнения программы виртуальной машиной и затрагивает не весь код, а только тот, который необходимо исполнить в настоящий момент. Использование промежуточного кода и исполняемой его виртуальной машины дает независимость от программной платформы (операционной системы), а частичная JIT компиляция – экономию по времени в сравнении с компиляцией всего кода или в сравнении с процессом трансляции (построчной компиляции)."
    },
    {
        "termin": ["Language Integrated Query","LINQ"],
        "definition": "расширение объектноориентированных языков программирования платформы Microsoft .NET Framework синтаксисом структурированных запросов, разработанное той же компанией. Используя LINQ, можно производить выборку набора объектов из некоторого множества (коллекции объектов) практически так же, как осуществляется отбор записей из таблиц реляционной базы данных посредством SQL, синтаксис которого во многом позаимствован авторами LINQ."
    },
    {
        "termin": ["Microsoft Developer Network","MSDN", "MSDN"],
        "definition": "подразделение компании Microsoft и созданный этим подразделением информационный сервис, предназначенный для информационной поддержки разработчиков программного и аппаратного обеспечения, использующих или  ориентирующихся на технологии Microsoft. Microsoft Visual Studio – интегрированная среда разработки программных продуктов компании Microsoft, которая, в том числе, поддерживает языки программирования для платформы Microsoft .NET Framework."
    },
    {
        "termin": ["Microsoft .NET Framework"],
        "definition": "одна из последних программных технологий компании Microsoft, созданная для разработки платформонезависимых приложений, исполняемых виртуальной машиной CLR."
    },
    {
        "termin": ["Open Database Connectivity","ODBC"],
        "definition": "API для унифицированного доступа к базам данных - предшественник OleDB. Object Linking and Embedding, Database (OLE DB) – библиотека COM интерфейсов унифицированного доступа к базам данных. OLE DB разработана Microsoft на смену ODBC."
    },
    {
        "termin": ["Plug-In"],
        "definition": "внешний по отношению к основному программному продукту компонент, который в ходе работы основного приложения может быть динамически к нему подключен и запущен. Как правило, такие модули используют базовую функциональность программы - контейнера для ее расширения и настройки - кастомизации. Plug-In компоненты разрабатываются по определенным контейнером программным спецификациям, а доступ к его базовой функциональности получают в процессе подключения через внутренний API. Частным случаем Plug-In компонента можно считать различного рода процедуры, написанные на встроенных в контейнеры языках программирования и исполняемые также встроенными компиляторами или трансляторами. Примерами таких контейнеров являются базовые продукты различных решений компаний 1С, SAP и т.п."
    },
    {
        "termin": ["Procedural Language", "Structured Query Language","PL-SQL"],
        "definition": "процедурное расширение языка SQL, разработанной компанией Oracle для своих СУБД."
    },
    {
        "termin": ["Structured Query Language","SQL"],
        "definition": "язык описания структурированных запросов к базам данных, результатом выполнения которых может быть или структурированный набор информации (результат выборки или кортеж) или изменения в составе данных (модификация данных). Также, инструкции SQL позволяют изменять саму структуру базы данных (определение данных), настраивать параметры доступа к различным ее разделам (определение доступа) и управлять транзакциями: применять или откатывать текущие изменения."
    },
    {
        "termin": ["Transact-SQL", "T-SQL"],
        "definition": "процедурное расширение языка SQL, разработанной компанией Microsoft для своей СУБД SQL Server. – "
    },
    {
        "termin": ["Unified Modeling Language", "UML"],
        "definition": "унифицированный язык моделирования предметной области, представленный набором нотаций к графическому представлению диаграмм классов, компонентов, прецедентов использования подсистем, бизнес-процессов и т.д. и т.п."
    },
    {
        "termin": ["VB.NET"],
        "definition": "объектно-ориентированный язык программирования платформы Microsoft .NET Framework. Синтаксис во многом заимствован у другого языка программирования компании Microsoft – Visual Basic. За внешним сходством скрываются фундаментальные отличия используемых языками программных платформ. Visual Basic создавался с целью упрощения работы с программными компонентами, разрабатываемыми по технологии COM. Язык программирования VB.NET работает на той же платформе, что и язык программирования C#."
    },
    {
        "termin": ["World Wide Web Consortium", "W3C"],
        "definition": "международная организация, основной деятельностью которой является разработка технологических стандартов для всемирной паутины и рекомендаций по их внедрению для  разработчиков программного обеспечения. eXtensible HyperText Markup Language (XHTML) – расширение XML, реализующее и расширяющее возможности HTML."
    },
    {
        "termin": ["eXtensible Markup Language", "XML"],
        "definition": "обобщенный язык разметки, предназначенный для создания на основе себя расширений: специализированных языков разметки или текстовых форматов для хранения и обмена наборами различного рода структурированной информации."
    },
    {
        "termin": ["XML Path Language", "XPath"],
        "definition": "Язык структурированных запросов к элементам XML. Выполняет те же функции по отношению к XML документу, что и SQL по отношению к базе данных."
    },
    {
        "termin": ["XML Schema", "Схема XML документа"],
        "definition": "расширение XML, предназначенное для описания правил и проверки на соответствие этим правилам специализированных XML документов."
    },
    {
        "termin": ["Программа"],
        "definition": "данные, предназначенные для управления конкретными компонентами системы обработки информации в целях реализации определенного алгоритма"
    },
    {
        "termin": ["Программное обеспечение"],
        "definition": "совокупность программ системы обработки информации и программных документов, необходимых для эксплуатации этих программ"
    },
    {
        "termin": ["Программирование"],
        "definition": "научная и практическая деятельность по созданию программ"
    },
    {
        "termin": ["Системная программа"],
        "definition": "программа, предназначенная для поддержания работоспособности системы обработки информации или повышения эффективности ее использования в процессе выполнения прикладных программ"
    },
    {
        "termin": ["Управляющая программа"],
        "definition": "системная программа, реализующая набор функций управления, в который включают управление  ресурсами и взаимодействием с внешней средой системы обработки информации, восстановление работы системы после появления неисправностей в технических средствах"
    },
    {
        "termin": ["Прикладная программа"],
        "definition": "программа, предназначенная для решения задачи или класса задач в определенной области применения системы обработки информации"
    },
    {
        "termin": ["Подпрограмма"],
        "definition": "программа, являющаяся частью другой программы и удовлетворяющая требованиям языка программирования"
    },
    {
        "termin": ["Программный модуль"],
        "definition": "программа или функционально завершенный фрагмент программы, предназначенный для хранения, трансляции, объединения с другими программными модулями для загрузки в оперативную память"
    },
    {
        "termin": ["Исходный модуль"],
        "definition": "программный модуль на исходном языке программирования, обрабатываемый транслятором" 
    },
    {
        "termin": ["Объектный модуль"],
        "definition": "программный модуль, получаемый в результате компиляции исходного модуля"
    },
    {
        "termin": ["Загрузочный модуль "],
        "definition": " программный модуль, представленный в форме, пригодной для загрузки в основную память для выполнения"
    }, {
        "termin": [" Рекурсивная подпрограмма "],
        "definition": " подпрограмма, которая может обращаться к себе самой"
    }, {
        "termin": [" Система программирования "],
        "definition": " система, образуемая языком программирования, компиляторами или интерпретаторами программ, представленных на данном языке, соответствующей документацией, а также вспомогательными средствами для подготовки программ к форме, пригодной для выполнения"
    }, {
        "termin": [" Язык высокого уровня "],
        "definition": " язык программирования, понятия и структура которого удобны для восприятия человеком Транслятор "
    }, {
        "termin": [" Конвектор языка "],
        "definition": " транслятор с некоторого языка на другой язык такого же уровня"
    }, {
        "termin": [" Компилятор "],
        "definition": " программа или техническое средство, выполняющее компиляцию"
    }, {
        "termin": [" Интерпретатор "],
        "definition": " программа или техническое средство, выполняющее интерпретацию"
    }, {
        "termin": [" Структурное программирование "],
        "definition": " метод построения программ, использующий только иерархически вложенные конструкции, каждая из которых имеет единственную точку входа и единственную точку выхода"
    }, {
        "termin": [" Объектно,ориентированное программирование "],
        "definition": " метод построения программ как совокупностей объектов и классов объектов, которые могут вызывать друг друга Примечание: объекты состоят из данных и операций над данными"
    }, {
        "termin": [" Логическое программирование "],
        "definition": " метод построения программ как совокупности логических правил с предварительно определенными алгоритмами для обработки входных данных программы в соответствии с ее правилами"
    }, {
        "termin": [" Спецификация программы "],
        "definition": " формализованное представление требований, предъявляемых к программе, которые должны быть удовлетворены при ее разработке, а также описание задачи, условия и эффекта действии без указания способа его достижения"
    }, {
        "termin": [" Трансляция программы "],
        "definition": " преобразование программы, представленной на одном языке программирования, в программу на другом языке и в определенном смысле равносильную первой"
    }, {
        "termin": [" Компиляция "],
        "definition": " трансляция программы с языка высокого уровня в форму, близкую к программе на машинном языке"
    }, {
        "termin": [" Ассемблирование "],
        "definition": " компиляция программ с языка ассемблера Поиск ошибок (в программе) "
    }, {
        "termin": [" Верификация программы "],
        "definition": " доказательство того, что работа программы соответствует спецификации на эту программу Дамп "
    }, {
        "termin": [" Функция адресации "],
        "definition": " функция, реализуемая определенными компонентами системы обработки информации, сопоставленная с пространством памяти, определенная на множестве адресов в этом пространстве памяти и предназначенная для выделения по адресу единственной подобласти в этом пространстве памяти так, что обеспечивается определенная операция с этой подобластью"
    }, {
        "termin": [" Адрес в пространстве памяти "],
        "definition": " элемент множества порций данных, являющегося областью определения функций адресации Пространство памяти "
    }, {
        "termin": [" Указатель области памяти "],
        "definition": " адрес области памяти, размещенный в пространстве памяти, в котором расположена эта область"
    }, {
        "termin": [" Адрес команды "],
        "definition": " адрес области памяти, которая занята командой"
    }, {
        "termin": [" Исполнительный адрес "],
        "definition": " адрес операнда команды, содержащийся в ней или вычисляемый на основании содержимого его полей"
    }, {
        "termin": [" Базовый адрес "],
        "definition": " аддитивная часть исполнительного адреса, постоянная для определенной совокупности адресуемых данных"
    }, {
        "termin": [" Индекс адреса "],
        "definition": " аддитивная часть адреса, предназначенная для модификации исполнительного адреса на отдельно вычисляемое значение в целях обращения к порциям данных, размещенным в памяти по определенному закону"
    }, {
        "termin": [" Базовая адресация "],
        "definition": " способ вычисления исполнительного адреса, при котором он вычисляется как сумма базового адреса и смещения Индексирование адреса "
    }, {
        "termin": [" Цикл "],
        "definition": "последовательность команд в программе, которая должна исполняться неоднократно в результате перехода от начала последовательности к концу"
    }, {
        "termin": [" Флажок (в программе) "],
        "definition": " переменная, регистрирующая появление определенного события или состояния Переключатель "
    }, {
        "termin": [" Семафор "],
        "definition": " переменная, используемая для обеспечения взаимного исключения"
    }, {
        "termin": [" Общая переменная "],
        "definition": "переменная, доступная двум или большему количеству асинхронных процедур или одновременно исполняемых программ"
    }, {
        "termin": [" Порция данных "],
        "definition": " данные, представленные как целое в конкретном контексте их описания или обработки и неразрывно связанные со своим носителем"
    },{
        "termin": [" Литерная цепочка "],
        "definition": " порция данных, состоящая из последовательности литер"
    }, {
        "termin": [" Идентификатор "],
        "definition": " литерная цепочка, выступающая в определенном контексте в роли символа Примечание: в обработке данных рассматривают идентификаторы порций данных, областей памяти, пространств памяти, томов и др., при этом они могут выражать определенные свойства этих объектов Составной идентификатор "
    }, {
        "termin": [" Область памяти "],
        "definition": " память, выделенная для размещения одной или нескольких порций данных"
    }, {
        "termin": [" Подобласть памяти "],
        "definition": " область памяти, рассматриваемая как составная часть другой области памяти"
    }, {
        "termin": [" Буфер "],
        "definition": "рабочая область памяти при пересылке данных Примечание: при операции ввода данные заносят в буферную область"
    }, {
        "termin": [" Поле данных "],
        "definition": " неразрывная область памяти, имеющая определенное назначение и обычно снабженная именем или идентификатором"
    }, {
        "termin": [" Экстент памяти "],
        "definition": " неразрывная область в пространстве внешней памяти данных, используемая при его распределении Примечание: в ОС ЕС ЭВМ под набор данных на устройствах прямого доступа пространство памяти отводится экстентами"
    }, {
        "termin": [" Процесс обработки данных "],
        "definition": " система действий, реализующая определенную функцию в системе обработки информации и оформленная так, что управляющая программа данной системы может перераспределять ресурсы этой системы в целях обеспечения мультипрограммирования. Примечания: 1) Процесс характеризуется состояниями, которые определяются наличием тех или иных ресурсов в распоряжении процесса и, следовательно, возможностью выполнять действия, относящиеся к процессу. 2) Перераспределение ресурсов, выполняемое управляющей программой, влияет на продолжительность процесса обработки данных, но не на его конечный результат. 3) Процесс оформляют с помощью специальных структур, которыми манипулирует управляющий механизм."
    }, {
        "termin": [" Параллельные процессы "],
        "definition": " процессы обработки данных, у которых интервалы времени выполнения перекрываются за счет использования различных ресурсов одной и той же системы Конкурирующие процессы "
    }, {
        "termin": [" Системный процесс "],
        "definition": " процесс обработки данных, в виде которого функционируют определенные компоненты управляющей программы"
    }, {
        "termin": [" Процесс системного ввода "],
        "definition": " системный процесс, предназначенный для автоматического ввода в систему обработки информации пакета заданий через назначенное этому процессу устройство ввода,вывода Примечание: процесс системного ввода в некоторых системах обработки информации интерпретирует предложения языка управления заданиями"
    }, {
        "termin": [" Процесс системного вывода "],
        "definition": " системный процесс, предназначенный для автоматического вывода определенной части результатов выполнения заданий наряду с сообщениями управляющей программы через назначенное этому процессу устройство ввода,вывода"
    }, {
        "termin": [" Приоритет процесса "],
        "definition": " преимущественное право процесса обработки данных перед другими процессами на использование ресурсов, выражаемое числом, присвоенным этому процессу"
    }, {
        "termin": [" Мультипрограммная связь "],
        "definition": " совокупность процессов, выполнением которых управляет одна и та же управляющая программа"
    }, {
        "termin": [" Удаленный ввод заданий "],
        "definition": " ввод заданий вычислительной системе средствами телеобработки данных"
    }, {
        "termin": [" Диалоговый удаленный ввод заданий "],
        "definition": " удаленный ввод заданий, при котором ввод осуществляется в диалоговом режиме"
    }, {
        "termin": [" Сеанс работы "],
        "definition": " интервал времени, в течение которого пользователю выделены ресурсы системы обработки информации для выполнения его работ и связи с ним в интерактивном режиме"
    }, {
        "termin": [" Сообщение системы "],
        "definition": "сообщение любой из системных программ, входящих в операционную систему"
    }, {
        "termin": [" Команда оператора "],
        "definition": "обращение оператора системы обработки информации к управляющей программе, переданное посредством консоли, для оказания воздействия на ход обработки данных"
    }, {
        "termin": [" Интерпретация "],
        "definition": " реализация смысла некоторого синтаксически законченного текста, представленного на конкретном языке Процедура начальной загрузки "
    }, {
        "termin": [" Инициализация "],
        "definition": " приведение областей памяти в состояние, исходное для последующей обработки или размещения данных"
    }, {
        "termin": [" Инициирование "],
        "definition": " создание условий для запуска процесса обработки данных"
    }, {
        "termin": [" Искусственный язык "],
        "definition": " язык, созданный отдельным лицом или группой лиц с определённой целью"
    }, {
        "termin": [" Программный документ "],
        "definition": " документ, содержащий в зависимости от назначения данные, необходимые для разработки, производства, эксплуатации и сопровождения программы или программного средства Примечание: программные документы и их части могут выполняться любым способом на любом материале, вводиться в ЭВМ и передаваться по каналам связи"
    }, {
        "termin": [" Кодирование данных "],
        "definition": " процесс построения данных из элементов конечного множества по установленным правилам Код данных "
    }, {
        "termin": [" Код исправлением ошибок "],
        "definition": " код данных, в котором допустимому кодовому представлению соответствует несколько недопустимых, причем возникновение ошибок в допустимом представлении преобразует его к одному из соответствующих недопустимых представлений, что позволяет исправить возникшую ошибку Примечание: примером кода с исправлением ошибок является код Хемминга"
    }, {
        "termin": [" Код с обнаружением ошибок "],
        "definition": " код данных, в котором каждое кодовое представление удовлетворяет установленным критериям так, что если в представлении возникают ошибки, то оно перестает удовлетворять этим критериям и устанавливается наличие ошибки Примечание: примером кода с обнаружением ошибок является циклический код"
    }, {
        "termin": [" Нотация "],
        "definition": " код данных, элементами кодового набора которого являются литеры"
    }, {
        "termin": [" Буквенно,цифровое представление "],
        "definition": "кодовое представление посредством букв,десятичных цифр, пробела и специальных литер"
    }, {
        "termin": [" Алфавит "],
        "definition": "кодовый набор, в котором установлено отношение порядка"
    }, {
        "termin": [" Кодон "],
        "definition": " элемент кодового набора Управляющий кодон "
    }, {
        "termin": [" Литера "],
        "definition": "кодон, отличающийся от управляющего кодона Специальная литера "
    }
]
